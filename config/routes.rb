Rails.application.routes.draw do
  # Define your application routes per the DSL in https://guides.rubyonrails.org/routing.html

  # Defines the root path route ("/")
  root "articles#index"
  #root é a homepage, está rota seta a home page ao controller articles e sua ação index
  resources :articles do
    resources :comments
    end

  end
  # UTILIZANDO O RESOURCES :CONTROLLER TODOS OS VERBOS RESTFULL JÁ SAO CRIADOS INCLUINDO ATÉ AS URL E SUAS AÇÕES E VIEWS IMPLCITOS COM O RENDER!
  # lembando que podemos usar as opções de excluir ou incluir quais dos verbos, rotas, queremos! O QUE ECONOMIZA E FACILITA TEMPO!

# get "/articles", to: "articles#index"
  # This route in routes.rb maps a GET request for the /articles URL path to the index action of the ArticlesController. More specifically:
  # get specifies that this route should be used for HTTP GET requests.
  # "/articles" specifies the URL path that this route will respond to.
  # to: specifies the controller action that this route should be mapped to.
  # {}"articles#index" specifies that the request should be handled by the index action of the ArticlesController class.
  # So when a user navigates to the /articles URL path in their browser, a GET request is sent to the Rails server, which then maps the request to the index action of the ArticlesController, and sends back the response generated by that action.
#  get "/articles/:id", to: "articles#show"
  # QUANDO VIER O REQUERIMENTO GET COM A URL /articles/id ROTEAR PARA O CONTROLLER articles e sua ação SHOW!

# o resources :comments diz que ele está dentro da hierarquia do articles!
# isto é, eliminando ou alterando um, está relacionado com o outro.
